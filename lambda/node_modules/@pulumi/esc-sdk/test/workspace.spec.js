"use strict";
// Copyright 2025, Pulumi Corporation.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const index_1 = require("index");
const node_test_1 = require("node:test");
const path_1 = __importDefault(require("path"));
(0, node_test_1.describe)("ESC", () => __awaiter(void 0, void 0, void 0, function* () {
    let tokenBefore;
    let backendBefore;
    let homeBefore;
    (0, node_test_1.before)(() => __awaiter(void 0, void 0, void 0, function* () {
        tokenBefore = process.env.PULUMI_ACCESS_TOKEN;
        backendBefore = process.env.PULUMI_BACKEND_URL;
        homeBefore = process.env.PULUMI_HOME;
        delete process.env.PULUMI_ACCESS_TOKEN;
        delete process.env.PULUMI_BACKEND_URL;
    }));
    (0, node_test_1.after)(() => __awaiter(void 0, void 0, void 0, function* () {
        process.env.PULUMI_ACCESS_TOKEN = tokenBefore;
        process.env.PULUMI_BACKEND_URL = backendBefore;
        process.env.PULUMI_HOME = homeBefore;
    }));
    (0, node_test_1.it)("test no creds at all", () => __awaiter(void 0, void 0, void 0, function* () {
        process.env.PULUMI_HOME = "/not_real_dir";
        let client = (0, index_1.DefaultClient)();
        assert_1.default.equal(client.config.basePath, undefined);
        assert_1.default.equal(client.config.accessToken, undefined);
    }));
    (0, node_test_1.it)("test just pulumi creds", () => __awaiter(void 0, void 0, void 0, function* () {
        process.env.PULUMI_HOME = path_1.default.dirname(process.cwd()) + "/test/test_pulumi_home";
        let client = (0, index_1.DefaultClient)();
        assert_1.default.equal(client.config.basePath, "https://api.moolumi.com/api/esc");
        assert_1.default.equal(client.config.accessToken, "pul-fake-token-moo");
    }));
    (0, node_test_1.it)("test pulumi creds with esc", () => __awaiter(void 0, void 0, void 0, function* () {
        process.env.PULUMI_HOME = path_1.default.dirname(process.cwd()) + "/test/test_pulumi_home_esc";
        let client = (0, index_1.DefaultClient)();
        assert_1.default.equal(client.config.basePath, "https://api.boolumi.com/api/esc");
        assert_1.default.equal(client.config.accessToken, "pul-fake-token-boo");
    }));
    (0, node_test_1.it)("test pulumi creds bad format", () => __awaiter(void 0, void 0, void 0, function* () {
        process.env.PULUMI_HOME = path_1.default.dirname(process.cwd()) + "/test/test_pulumi_home_bad_format";
        let client = (0, index_1.DefaultClient)();
        assert_1.default.equal(client.config.basePath, undefined);
        assert_1.default.equal(client.config.accessToken, undefined);
    }));
}));
//# sourceMappingURL=workspace.spec.js.map